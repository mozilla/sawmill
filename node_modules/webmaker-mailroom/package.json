{
  "name": "webmaker-mailroom",
  "version": "0.0.5",
  "description": "This module outputs **rendered/localized html** for Webmaker emails given a template name, some arbitrary data, and a locale.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha"
  },
  "author": "",
  "license": "MPL 2.0",
  "dependencies": {
    "nunjucks": "1.0.5",
    "webmaker-i18n": "0.3.21"
  },
  "devDependencies": {
    "express": "^4.4.1"
  },
  "readme": "# Webmaker mailroom\n\nThis module outputs **rendered/localized html** for Webmaker emails given a template name, some arbitrary data, and a locale.\n\n![jbuck the mailman](jbuckmail.png)\n\n## Install\n```\nnpm install webmaker-mailroom\n```\n\n## Usage\n```\nvar mailroom = require('webmaker-mailroom');\n\n// Configure\nvar templateName = 'badge_awarded';\nvar data = {\n  name: 'Kate Hudson',\n  faveTeam: 'DFB'\n};\nvar locale = 'en-US';\n\nvar email = mailroom.render(templateName, data, locale);\n// Output\n// email.html: The html of the email body\n// email.subject: The subject of the html\n```\n## List of available templates\n\n### `test`\nData model:\n```js\n{\n  number: \"This can be any number, just for testing.\"\n}\n```\n\n### `event_mentor_confirmation_email`\nData model:\n```js\n{\n  username: \"Can be the event mentor's username or undefined if the email is not associated with a username\",\n  eventUrl: \"The url of the event page\",\n  eventName: \"The name of the event\",\n  confirmUrlYes: \"The tokenized landing page url for a positive confirmation\",\n  confirmUrlNo: \"The tokenized landing page url for a negative confirmation\",\n  organizerUsername: \"The username of the event organizer\"\n}\n```\n\n### `hive_badge_awarded`\nData model:\n\nIf a user/username exists:\n```js\n{\n  username: \"Badge earner's username\",\n  badgeUrl: \"The complete url of the badge, e.g. https://webmaker.org/badges/hive-community-member\",\n  profileUrl: \"The complete url of the user's profile page e.g. https://webmaker.org/user/user123\",\n  comments: \"The comments included with the approved application\"\n}\n```\n\nIf a user/username exists:\n```js\n{\n  badgeUrl: \"The complete url of the badge, e.g. https://webmaker.org/badges/hive-community-member\",\n  signUpUrl: \"The complete url where a user can go to sign up for a new badge\",\n  comments: \"The comments included with the approved application\"\n}\n```\n\n## Tests\n\n### Automatic (with mocha)\n\n```\nnpm install\nnpm test\n```\n### Manual tests\n\n```\nnpm install\nnode example\n```\nThen visit http://localhost:1967/<template name> in your browser.\n\n## Adding a new email template\n\n1. If your email event is called \"Awesome Event\", create an html file in `templates/` called `awesome_event.html`\n2. Refer to the [nunjucks templating docs](http://mozilla.github.io/nunjucks/templating.html) for how to add templated data.\n3. Add strings to `locale/en_US/strings.json`. In the template, you should use the syntax `{{ 'key-name' | gettext }}`\n4. Add a subject to `locale/en_US/strings.json`. The key should be `subject_<template name>`.\n5. Add some test data to `test/mock-data.js`. You should format your test data as an array of test data sets, commenting each one if necessary.\n6. Manually test your template by running `npm example`. If your html file was `templates/awesome_event.html`, you would navigate to `http://localhost:1967/awesome_event` in your browser.\n7. Add automatic tests for your template to `test/test.js` and run `npm test`.\n8. Update the 'List of available templates' section in `README.md`  with the event name and data model.\n\n",
  "readmeFilename": "README.md",
  "_id": "webmaker-mailroom@0.0.5",
  "dist": {
    "shasum": "224b65f4fa6608c5ce80ff6fb5f63cd55235f576"
  },
  "_from": "webmaker-mailroom@0.0.5",
  "_resolved": "https://registry.npmjs.org/webmaker-mailroom/-/webmaker-mailroom-0.0.5.tgz"
}
